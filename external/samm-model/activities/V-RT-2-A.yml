---
# ===========================================================
# OWASP SAMM Activity Description
# ===========================================================
#Link to the stream that this activity belongs to
stream: efb5d1f275504173899da345ef5bbe8e

#Link to the practice level that this activity belongs to
level: 3e6e9a2b696e48018830b44fa96f98b5

#Unique identifier (GUID) used to refer to this activity.
#Please generate another identifier for your specific activity.
id: 9951bda24b624cc684a2851f9d56c5d8

#The title of this activity
title: Define and run security test cases from requirements

#Describe the benefit that is achieved by implementing this activity
benefit: Integration of security requirements into test scenarios

#A one sentence description of the activity
shortDescription: Derive test cases from known security requirements

#A multi-paragraph description of the activity
longDescription: |
  From the security requirements, identify and implement a set of security test cases to check the software for correct functionality. To have a successful testing program, you must know the testing objectives, specified by the security requirements.

  Derive security test cases for the applications in scope from the security requirements created as part of the "Security Requirements" SAMM security practice. To validate security requirements with security tests, security requirements are function-driven and highlight the expected functionality (the what) and, implicitly, the implementation (the how). These requirements are also referred to as "positive requirements", since they state the expected functionality that can be validated through security tests. Examples of positive requirements include “the application will lockout the user after six failed login attempts” or “passwords need to be a minimum of six alphanumeric characters”. The validation of positive requirements consists of asserting the expected functionality. You can do it re-creating the testing conditions and running the test according to predefined inputs. Show the results as as a fail or pass condition.

  Often, it is most effective to use the project team’s time to build application-specific test cases, and publicly available resources or purchased knowledge bases to select applicable general test cases for security. Relevant development, security, and quality assurance staff review candidate test cases for applicability, efficacy, and feasibility. Derive the test cases during the requirements and/or design phase of the functionality. Testing the security requirements is part of the functional testing of the software.

#The output of this particular activity
results:

#The different metrics that can be used to measure the success of the activity
metrics:

#A description of the costs required to implement the activity
costs:
#The (standard) roles involved in the implementation of this activity
personnel:

#Internal notes that might help the author
notes:

#References to other activities that are prerequesites to implement this one.
dependencies:
#Type Classification of the Document
type: Activity
